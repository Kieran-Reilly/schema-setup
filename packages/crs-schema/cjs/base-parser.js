"use strict";function e(e){if(e&&e.__esModule)return e;var s={};return e&&Object.keys(e).forEach((function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(s,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})})),s.default=e,s}Object.defineProperty(exports,"__esModule",{value:!0});exports.BaseParser=class{constructor(e){this.attributes=e,this.styleImports=[],this.providers=new Map,this.managers=new Map,this.valueProcessors=[]}async dispose(){for(let e of this.providers.keys())await this.providers.get(e).dispose();for(let e of this.managers.keys())await this.managers.get(e).dispose();await this.providers.clear(),await this.managers.clear(),delete this.providers,delete this.managers,delete this.attributes,this.valueProcessors.length=0,this.options=0}async register(e){const s=new e(this);1==s.isManager?(this.managers.set(s.key,s),1==s.valueProcessor&&this.valueProcessors.push(s)):this.providers.set(s.key,s)}async load(s){for(let t of s||[])await this.register((await new Promise((function(s){s(e(require(t)))}))).default)}async init(){for(const e of this.managers)e.reset&&await e.reset();const e=Object.keys(this.schema);for(let s of e)s!=this.options.root&&this.managers.has(s)&&await this.managers.get(s).initialize(this.schema[s])}async processStyleImports(e){if(this.styleImports.length>0){const s=[];this.styleImports.forEach(e=>s.push(`@import "${e}";`)),e=`<style>${s.join("\n")};</style>${e}`}return e}async validate(){}};
